<?php/** * Twenty Twelve functions and definitions * * Sets up the theme and provides some helper functions, which are used * in the theme as custom template tags. Others are attached to action and * filter hooks in WordPress to change core functionality. * * When using a child theme (see http://codex.wordpress.org/Theme_Development and * http://codex.wordpress.org/Child_Themes), you can override certain functions * (those wrapped in a function_exists() call) by defining them first in your child theme's * functions.php file. The child theme's functions.php file is included before the parent * theme's file, so the child theme functions would be used. * * Functions that are not pluggable (not wrapped in function_exists()) are instead attached * to a filter or action hook. * * For more information on hooks, actions, and filters, @link http://codex.wordpress.org/Plugin_API * * @package WordPress * @subpackage Twenty_Twelve * @since Twenty Twelve 1.0 */// WordPressの管理画面ログインURLを変更するdefine( 'LOGIN_CHANGE_PAGE', 'jalogin.php' );add_action( 'login_init', 'login_change_init' );add_filter( 'site_url', 'login_change_site_url', 10, 4 );add_filter( 'wp_redirect', 'login_change_wp_redirect', 10, 2 );// 指定以外のログインURLは403エラーにするif ( ! function_exists( 'login_change_init' ) ) {  function login_change_init() {    if ( !defined( 'LOGIN_CHANGE' ) || sha1( 'ma2m32AX2kW29321' ) != LOGIN_CHANGE ) {      status_header( 403 );      exit;    }  }}// ログイン済みか新設のログインURLの場合はwp-login.phpを置き換えるif ( ! function_exists( 'login_change_site_url' ) ) {  function login_change_site_url( $url, $path, $orig_scheme, $blog_id ) {    if ( $path == 'wp-login.php' &&      ( is_user_logged_in() || strpos( $_SERVER['REQUEST_URI'], LOGIN_CHANGE_PAGE ) !== false ) )      $url = str_replace( 'wp-login.php', LOGIN_CHANGE_PAGE, $url );    return $url;  }}// ログアウト時のリダイレクト先の設定if ( ! function_exists( 'login_change_wp_redirect' ) ) {  function login_change_wp_redirect( $location, $status ) {    if ( strpos( $_SERVER['REQUEST_URI'], LOGIN_CHANGE_PAGE ) !== false )      $location = str_replace( 'wp-login.php', LOGIN_CHANGE_PAGE, $location );    return $location;  }} // The site namefunction site_name() {	return '/blog/';} /* test */function remove_media_link( $form_fields, $post ) {unset( $form_fields['url'] );return $form_fields;}/* end of test */add_filter( 'attachment_fields_to_edit', 'remove_media_link', 10, 2 );/* change image url in posts */function domain_shortcode() {    if ( preg_match( '|^https?://[^/]+|', get_option( 'home' ), $m ) ) {        $domain = $m[0] . '/blog';    } else {        $domain = '';    }    return $domain;}add_shortcode( 'domain', 'domain_shortcode' );/* end of change image url in posts */  /** * Image Thumbnails *///function image_thumbnail($img_link, $container_height, $container_width, $size_type, $view) {function image_thumbnail($img_link, $container_height, $container_width, $size_type) {	include(locate_template('thumbnail_formula.php'));		return $thumb_css;}/** * End of Image Thumbnails */function footer_color( $var = NULL ) {	global $fc;	if ( NULL !== $var ) {		$fc= $var;	}		return $fc;}/* remove special characters from tag link */function tag_link( $the_link ) {	$the_link2 = str_replace(' ', '-', $the_link);	$the_link2 = str_replace("'", "", $the_link2);		return $the_link2;}/* --------------------------------------- *///add_action ('comment_post','my_comments_js_function');/* redirect after posting comment */add_filter('comment_post_redirect', 'redirect_after_comment');function redirect_after_comment($location){	global $wpdb;		//echo '<script type="text/javascript">';	//echo 'alert("コメントの投稿が完了しました。\nいただいたコメントは内容の承認後、一覧に表示されます。\n恐れ入りますが、今しばらくお待ちください。")';	//echo '</script>';	//return $_SERVER["HTTP_REFERER"]."#comment-".$wpdb->insert_id;	//return $_SERVER["HTTP_REFERER"]."/?y=p/#comment_posted";	//return $_SERVER["HTTP_REFERER"];	$newurl = substr($location, 0, strpos($location, "#comment")); //remove repeat values on url	return $newurl . '?y=p/#comment_posted';}/* end of redirecting after posting comment *//* ---------------------------------------- *//* Site Color, Font Color and Header Images */function custom_site_settings($b_id) {	$triangle_color = array();	$font_color = array();	$header_image = array();		include(locate_template('triangle_title_setting.php'));		// check values	$t_color = $triangle_color[$b_id];	$f_color = $font_color[$b_id];	//$h_image = $header_image[$b_id];		if ($triangle_color[$b_id] == '') {		$t_color = $triangle_color[0];	}	if ($font_color[$b_id] == '') {		$f_color = $font_color[0];	}	//if ($header_image[$b_id] == '') {		//$h_image = $header_image[0];	//}	// end of checking values		return array($t_color, $f_color);//, $h_image);}/* ---------------------------------------- *//* Triangle Name */function triangle_name($b_id, $p_id) {	$s_id = array();	$s_name = array();	$triangle_name = array();		include(locate_template('triangle_title_setting.php'));		$s_count = 0;	$the_name = '';		if ($b_id <= 6) { // English Blogs		if ($b_id == 2) { // Australia Blog			$s_list = $australia_school;		}		if ($b_id == 3) { // Canada Blog			$s_list = $canada_school;		}		if ($b_id == 4) { // New Zealand Blog			$s_list = $new_zealand_school;		}		if ($b_id == 5) { // United Kingdom Blog			$s_list = $united_kingdom_school;		}		if ($b_id == 6) { // World Wide Blog			$s_list = $world_school;		}				foreach ($s_list as $k => $v) {			if ($k % 2 == 0) {				$s_id[] = ((int) $v);			}			else {				$s_name[] = $v;			}		}				foreach ($s_id as $s_id2) {			if ($s_id2 == $p_id) {				$the_name = $s_name[$s_count];				break;			}						$s_count++;		}				unset($s_id);		unset($s_name);	} else { // Japan Blog						$the_name = $triangle_name[$b_id - 7];	}		return $the_name;}/* ------------- */ /** * Replace [No Image] Image */function catch_that_image($site_name, $b_id = null, $p_id = null) {  global $post, $posts;  $first_img = '';  ob_start();  ob_end_clean();  $output = preg_match_all('/<img.+src=[\'"]([^\'"]+)[\'"].*>/i', $post->post_content, $matches);  $first_img = $matches[1][0];  if(empty($first_img)) {		$school_no_img = '';		include(locate_template('no_image.php'));				if ($default == 0) {			if ($school_no_img == '') {				$school_no_img = $default_img;			}		}		if ($default == 1) {			$school_no_img = $default_img;		}					$first_img = $site_name . $school_no_img;  }		$second_img = str_replace('[domain]', $site_name, $first_img);	$second_img = str_replace('/tokyoblog/', '/', $second_img);	$second_img = str_replace('/osakablog/', '/', $second_img);	$second_img = str_replace('/nagoyablog/', '/', $second_img);	$second_img = str_replace('/fukuokablog/', '/', $second_img);	$second_img = str_replace('/okinawablog/', '/', $second_img);	$second_img = str_replace('/australia/', '/', $second_img);	$second_img = str_replace('/canada/', '/', $second_img);	$second_img = str_replace('/newzealand/', '/', $second_img);	$second_img = str_replace('/europe/', '/', $second_img);	$second_img = str_replace('/world/', '/', $second_img);	$second_img = str_replace('//', '/', $second_img);		$first_img = $second_img;	  return $first_img;}/** * End of Replacing [No Image] Image *//** * Replace [No Image] Image */function catch_that_image_custom($site_name, $b_id, $p_id) {    global $post, $posts;    $first_img = '';    ob_start();    ob_end_clean();    $output = preg_match_all('/<img.+src=[\'"]([^\'"]+)[\'"].*>/i', $post->post_content, $matches);    $first_img = $matches[1][0];        $second_img = str_replace('[domain]', $site_name, $first_img);    $second_img = str_replace('/tokyoblog/', '/', $second_img);    $second_img = str_replace('/osakablog/', '/', $second_img);    $second_img = str_replace('/nagoyablog/', '/', $second_img);    $second_img = str_replace('/fukuokablog/', '/', $second_img);    $second_img = str_replace('/okinawablog/', '/', $second_img);    $second_img = str_replace('/australia/', '/', $second_img);    $second_img = str_replace('/canada/', '/', $second_img);    $second_img = str_replace('/newzealand/', '/', $second_img);    $second_img = str_replace('/europe/', '/', $second_img);    $second_img = str_replace('/world/', '/', $second_img);    $second_img = str_replace('//', '/', $second_img);    $first_img = $second_img;    return $first_img;}/** * End of Replacing [No Image] Image */// Set up the content width value based on the theme's design and stylesheet.if ( ! isset( $content_width ) )	$content_width = 625;/** * Twenty Twelve setup. * * Sets up theme defaults and registers the various WordPress features that * Twenty Twelve supports. * * @uses load_theme_textdomain() For translation/localization support. * @uses add_editor_style() To add a Visual Editor stylesheet. * @uses add_theme_support() To add support for post thumbnails, automatic feed links, * 	custom background, and post formats. * @uses register_nav_menu() To add support for navigation menus. * @uses set_post_thumbnail_size() To set a custom post thumbnail size. * * @since Twenty Twelve 1.0 */function twentytwelve_setup() {	/*	 * Makes Twenty Twelve available for translation.	 *	 * Translations can be added to the /languages/ directory.	 * If you're building a theme based on Twenty Twelve, use a find and replace	 * to change 'twentytwelve' to the name of your theme in all the template files.	 */	load_theme_textdomain( 'twentytwelve', get_template_directory() . '/languages' );	// This theme styles the visual editor with editor-style.css to match the theme style.	add_editor_style();	// Adds RSS feed links to <head> for posts and comments.	add_theme_support( 'automatic-feed-links' );	// This theme supports a variety of post formats.	add_theme_support( 'post-formats', array( 'aside', 'image', 'link', 'quote', 'status' ) );	// This theme uses wp_nav_menu() in one location.	register_nav_menu( 'primary', __( 'Primary Menu', 'twentytwelve' ) );	/*	 * This theme supports custom background color and image,	 * and here we also set up the default background color.	 */	add_theme_support( 'custom-background', array(		'default-color' => 'e6e6e6',	) );	// This theme uses a custom image size for featured images, displayed on "standard" posts.	add_theme_support( 'post-thumbnails' );	set_post_thumbnail_size( 624, 9999 ); // Unlimited height, soft crop}add_action( 'after_setup_theme', 'twentytwelve_setup' );/** * Add support for a custom header image. */require( get_template_directory() . '/inc/custom-header.php' );/** * Return the Google font stylesheet URL if available. * * The use of Open Sans by default is localized. For languages that use * characters not supported by the font, the font can be disabled. * * @since Twenty Twelve 1.2 * * @return string Font stylesheet or empty string if disabled. */function twentytwelve_get_font_url() {	$font_url = '';	/* translators: If there are characters in your language that are not supported	 * by Open Sans, translate this to 'off'. Do not translate into your own language.	 */	if ( 'off' !== _x( 'on', 'Open Sans font: on or off', 'twentytwelve' ) ) {		$subsets = 'latin,latin-ext';		/* translators: To add an additional Open Sans character subset specific to your language,		 * translate this to 'greek', 'cyrillic' or 'vietnamese'. Do not translate into your own language.		 */		$subset = _x( 'no-subset', 'Open Sans font: add new subset (greek, cyrillic, vietnamese)', 'twentytwelve' );		if ( 'cyrillic' == $subset )			$subsets .= ',cyrillic,cyrillic-ext';		elseif ( 'greek' == $subset )			$subsets .= ',greek,greek-ext';		elseif ( 'vietnamese' == $subset )			$subsets .= ',vietnamese';		$protocol = is_ssl() ? 'https' : 'http';		$query_args = array(			'family' => 'Open+Sans:400italic,700italic,400,700',			'subset' => $subsets,		);		$font_url = add_query_arg( $query_args, "$protocol://fonts.googleapis.com/css" );	}	return $font_url;}/** * Enqueue scripts and styles for front-end. * * @since Twenty Twelve 1.0 */function twentytwelve_scripts_styles() {	global $wp_styles;	/*	 * Adds JavaScript to pages with the comment form to support	 * sites with threaded comments (when in use).	 */	if ( is_singular() && comments_open() && get_option( 'thread_comments' ) )		wp_enqueue_script( 'comment-reply' );	// Adds JavaScript for handling the navigation menu hide-and-show behavior.	wp_enqueue_script( 'twentytwelve-navigation', get_template_directory_uri() . '/js/navigation.js', array( 'jquery' ), '20140711', true );	$font_url = twentytwelve_get_font_url();	if ( ! empty( $font_url ) )		wp_enqueue_style( 'twentytwelve-fonts', esc_url_raw( $font_url ), array(), null );	// Loads our main stylesheet.	wp_enqueue_style( 'twentytwelve-style', get_stylesheet_uri() );	// Loads the Internet Explorer specific stylesheet.	wp_enqueue_style( 'twentytwelve-ie', get_template_directory_uri() . '/css/ie.css', array( 'twentytwelve-style' ), '20121010' );	$wp_styles->add_data( 'twentytwelve-ie', 'conditional', 'lt IE 9' );}add_action( 'wp_enqueue_scripts', 'twentytwelve_scripts_styles' );/** * Filter TinyMCE CSS path to include Google Fonts. * * Adds additional stylesheets to the TinyMCE editor if needed. * * @uses twentytwelve_get_font_url() To get the Google Font stylesheet URL. * * @since Twenty Twelve 1.2 * * @param string $mce_css CSS path to load in TinyMCE. * @return string Filtered CSS path. */function twentytwelve_mce_css( $mce_css ) {	$font_url = twentytwelve_get_font_url();	if ( empty( $font_url ) )		return $mce_css;	if ( ! empty( $mce_css ) )		$mce_css .= ',';	$mce_css .= esc_url_raw( str_replace( ',', '%2C', $font_url ) );	return $mce_css;}add_filter( 'mce_css', 'twentytwelve_mce_css' );/** * Filter the page title. * * Creates a nicely formatted and more specific title element text * for output in head of document, based on current view. * * @since Twenty Twelve 1.0 * * @param string $title Default title text for current view. * @param string $sep Optional separator. * @return string Filtered title. */function twentytwelve_wp_title( $title, $sep ) {	global $paged, $page;	if ( is_feed() )		return $title;	// Add the site name.	$title .= get_bloginfo( 'name', 'display' );	// Add the site description for the home/front page.	$site_description = get_bloginfo( 'description', 'display' );	if ( $site_description && ( is_home() || is_front_page() ) )		$title = "$title $sep $site_description";	// Add a page number if necessary.	if ( ( $paged >= 2 || $page >= 2 ) && ! is_404() )		$title = "$title $sep " . sprintf( __( 'Page %s', 'twentytwelve' ), max( $paged, $page ) );	return $title;}add_filter( 'wp_title', 'twentytwelve_wp_title', 10, 2 );/** * Filter the page menu arguments. * * Makes our wp_nav_menu() fallback -- wp_page_menu() -- show a home link. * * @since Twenty Twelve 1.0 */function twentytwelve_page_menu_args( $args ) {	if ( ! isset( $args['show_home'] ) )		$args['show_home'] = true;	return $args;}add_filter( 'wp_page_menu_args', 'twentytwelve_page_menu_args' );/** * Register sidebars. * * Registers our main widget area and the front page widget areas. * * @since Twenty Twelve 1.0 */function twentytwelve_widgets_init() {	register_sidebar( array(		'name' => __( 'Main Sidebar', 'twentytwelve' ),		'id' => 'sidebar-1',		'description' => __( 'Appears on posts and pages except the optional Front Page template, which has its own widgets', 'twentytwelve' ),		'before_widget' => '<aside id="%1$s" class="widget %2$s">',		'after_widget' => '</aside>',		'before_title' => '<h3 class="widget-title">',		'after_title' => '</h3>',	) );	register_sidebar( array(		'name' => __( 'First Front Page Widget Area', 'twentytwelve' ),		'id' => 'sidebar-2',		'description' => __( 'Appears when using the optional Front Page template with a page set as Static Front Page', 'twentytwelve' ),		'before_widget' => '<aside id="%1$s" class="widget %2$s">',		'after_widget' => '</aside>',		'before_title' => '<h3 class="widget-title">',		'after_title' => '</h3>',	) );	register_sidebar( array(		'name' => __( 'Second Front Page Widget Area', 'twentytwelve' ),		'id' => 'sidebar-3',		'description' => __( 'Appears when using the optional Front Page template with a page set as Static Front Page', 'twentytwelve' ),		'before_widget' => '<aside id="%1$s" class="widget %2$s">',		'after_widget' => '</aside>',		'before_title' => '<h3 class="widget-title">',		'after_title' => '</h3>',	) );}add_action( 'widgets_init', 'twentytwelve_widgets_init' );if ( ! function_exists( 'twentytwelve_content_nav' ) ) :/** * Displays navigation to next/previous pages when applicable. * * @since Twenty Twelve 1.0 */function twentytwelve_content_nav( $html_id ) {	global $wp_query;	$html_id = esc_attr( $html_id );	if ( $wp_query->max_num_pages > 1 ) : ?>		<nav id="<?php echo $html_id; ?>" class="navigation" role="navigation">			<h3 class="assistive-text"><?php _e( 'Post navigation', 'twentytwelve' ); ?></h3>			<div class="nav-previous"><?php next_posts_link( __( '<span class="meta-nav">&larr;</span> 次', 'twentytwelve' ) ); ?></div>			<div class="nav-next"><?php previous_posts_link( __( '前 <span class="meta-nav">&rarr;</span>', 'twentytwelve' ) ); ?></div>		</nav><!-- #<?php echo $html_id; ?> .navigation -->	<?php endif;}endif;if ( ! function_exists( 'twentytwelve_comment' ) ) :/** * Template for comments and pingbacks. * * To override this walker in a child theme without modifying the comments template * simply create your own twentytwelve_comment(), and that function will be used instead. * * Used as a callback by wp_list_comments() for displaying the comments. * * @since Twenty Twelve 1.0 */function twentytwelve_comment( $comment, $args, $depth ) {	$GLOBALS['comment'] = $comment;	switch ( $comment->comment_type ) :		case 'pingback' :		case 'trackback' :		// Display trackbacks differently than normal comments.	?>	<li <?php comment_class(); ?> id="comment-<?php comment_ID(); ?>">		<p><?php _e( 'Pingback:', 'twentytwelve' ); ?> <?php comment_author_link(); ?> <?php edit_comment_link( __( '(Edit)', 'twentytwelve' ), '<span class="edit-link">', '</span>' ); ?></p>	<?php			break;		default :		// Proceed with normal comments.		global $post;	?>	<?php if ( '0' != $comment->comment_approved ) : ?>	<li <?php comment_class(); ?> id="li-comment-<?php comment_ID(); ?>">		<article id="comment-<?php comment_ID(); ?>" class="comment">			<header class="comment-meta comment-author vcard">				<ul>				<?php 					echo '<li>'.get_avatar( $comment, 44 ).'</li>';					printf( '<li><cite><b class="fn">%1$s</b> %2$s</cite></li>',						get_comment_author_link(),						// If current post author is also comment author, make it known visually.						( $comment->user_id === $post->post_author ) ? /*'<span>' . __( 'Post author', 'twentytwelve' ) . '</span>'*/'' : ' '					); 				?>				</ul>					<div class="inner_comment"> 						<section class="comment-content comment">							<?php comment_text(); ?>							<?php //edit_comment_link( __( 'Edit', 'twentytwelve' ), '<p class="edit-link">', '</p>' ); ?>						</section><!-- .comment-content -->							<?php					/* printf( '<cite><b class="fn">%1$s</b> %2$s</cite>',						get_comment_author_link(),						// If current post author is also comment author, make it known visually.						( $comment->user_id === $post->post_author ) ? '<span>' . __( 'Post author', 'twentytwelve' ) . '</span>' : ''					);  */						printf( '<time datetime="%2$s">%3$s</time>',							esc_url( get_comment_link( $comment->comment_ID ) ),							get_comment_time( 'c' ),							/* translators: 1: date, 2: time */							sprintf( __( '%1$s at %2$s', 'twentytwelve' ), get_comment_date(), get_comment_time() )						);				?>					</div>			</header><!-- .comment-meta -->	<?php endif; ?>			<?php					/* printf( '<cite><b class="fn">%1$s</b> %2$s</cite>',						get_comment_author_link(),						// If current post author is also comment author, make it known visually.						( $comment->user_id === $post->post_author ) ? '<span>' . __( 'Post author', 'twentytwelve' ) . '</span>' : ''					);  */								?>									<?php if ( '0' == $comment->comment_approved ) : ?>				<!-- <article id="comment-<?php comment_ID(); ?>" class="comment">					<p class="comment-awaiting-moderation"><?php _e( 'コメント1件を受け付けました。承認後ページに表示されます。', 'twentytwelve' ); ?></p> -->			<?php endif; ?>						<!--div class="reply">				<?php //comment_reply_link( array_merge( $args, array( 'reply_text' => __( 'Reply', 'twentytwelve' ), 'after' => ' <span>&darr;</span>', 'depth' => $depth, 'max_depth' => $args['max_depth'] ) ) ); ?>			</div><!-- .reply -->		</article><!-- #comment-## -->	<?php		break;	endswitch; // end comment_type check}endif;if ( ! function_exists( 'twentytwelve_entry_meta' ) ) :/** * Set up post entry meta. * * Prints HTML with meta information for current post: categories, tags, permalink, author, and date. * * Create your own twentytwelve_entry_meta() to override in a child theme. * * @since Twenty Twelve 1.0 */function twentytwelve_entry_meta() {	// Translators: used between list items, there is a space after the comma.	$categories_list = get_the_category_list( __( ', ', 'twentytwelve' ) );	// Translators: used between list items, there is a space after the comma.	$tag_list = get_the_tag_list( '', __( ', ', 'twentytwelve' ) );	$date = sprintf( '<a href="%1$s" title="%2$s" rel="bookmark"><time class="entry-date" datetime="%3$s">%4$s</time></a>',		esc_url( get_permalink() ),		esc_attr( get_the_time() ),		esc_attr( get_the_date( 'c' ) ),		esc_html( get_the_date() )	);	$author = sprintf( '<span class="author vcard"><a class="url fn n" href="%1$s" title="%2$s" rel="author">%3$s</a></span>',		esc_url( get_author_posts_url( get_the_author_meta( 'ID' ) ) ),		esc_attr( sprintf( __( 'View all posts by %s', 'twentytwelve' ), get_the_author() ) ),		get_the_author()	);	// Translators: 1 is category, 2 is tag, 3 is the date and 4 is the author's name.	if ( $tag_list ) {		$utility_text = __( 'This entry was posted in %1$s and tagged %2$s on %3$s<span class="by-author"> by %4$s</span>.', 'twentytwelve' );	} elseif ( $categories_list ) {		$utility_text = __( 'This entry was posted in %1$s on %3$s<span class="by-author"> by %4$s</span>.', 'twentytwelve' );	} else {		$utility_text = __( 'This entry was posted on %3$s<span class="by-author"> by %4$s</span>.', 'twentytwelve' );	}	printf(		$utility_text,		$categories_list,		$tag_list,		$date,		$author	);}endif;/** * Extend the default WordPress body classes. * * Extends the default WordPress body class to denote: * 1. Using a full-width layout, when no active widgets in the sidebar *    or full-width template. * 2. Front Page template: thumbnail in use and number of sidebars for *    widget areas. * 3. White or empty background color to change the layout and spacing. * 4. Custom fonts enabled. * 5. Single or multiple authors. * * @since Twenty Twelve 1.0 * * @param array $classes Existing class values. * @return array Filtered class values. */function twentytwelve_body_class( $classes ) {	$background_color = get_background_color();	$background_image = get_background_image();	if ( ! is_active_sidebar( 'sidebar-1' ) || is_page_template( 'page-templates/full-width.php' ) )		$classes[] = 'full-width';	if ( is_page_template( 'page-templates/front-page.php' ) ) {		$classes[] = 'template-front-page';		if ( has_post_thumbnail() )			$classes[] = 'has-post-thumbnail';		if ( is_active_sidebar( 'sidebar-2' ) && is_active_sidebar( 'sidebar-3' ) )			$classes[] = 'two-sidebars';	}	if ( empty( $background_image ) ) {		if ( empty( $background_color ) )			$classes[] = 'custom-background-empty';		elseif ( in_array( $background_color, array( 'fff', 'ffffff' ) ) )			$classes[] = 'custom-background-white';	}	// Enable custom font class only if the font CSS is queued to load.	if ( wp_style_is( 'twentytwelve-fonts', 'queue' ) )		$classes[] = 'custom-font-enabled';	if ( ! is_multi_author() )		$classes[] = 'single-author';	return $classes;}add_filter( 'body_class', 'twentytwelve_body_class' );/** * Adjust content width in certain contexts. * * Adjusts content_width value for full-width and single image attachment * templates, and when there are no active widgets in the sidebar. * * @since Twenty Twelve 1.0 */function twentytwelve_content_width() {	if ( is_page_template( 'page-templates/full-width.php' ) || is_attachment() || ! is_active_sidebar( 'sidebar-1' ) ) {		global $content_width;		$content_width = 960;	}}add_action( 'template_redirect', 'twentytwelve_content_width' );/** * Register postMessage support. * * Add postMessage support for site title and description for the Customizer. * * @since Twenty Twelve 1.0 * * @param WP_Customize_Manager $wp_customize Customizer object. */function twentytwelve_customize_register( $wp_customize ) {	$wp_customize->get_setting( 'blogname' )->transport         = 'postMessage';	$wp_customize->get_setting( 'blogdescription' )->transport  = 'postMessage';	$wp_customize->get_setting( 'header_textcolor' )->transport = 'postMessage';}add_action( 'customize_register', 'twentytwelve_customize_register' );/** * Enqueue Javascript postMessage handlers for the Customizer. * * Binds JS handlers to make the Customizer preview reload changes asynchronously. * * @since Twenty Twelve 1.0 */function twentytwelve_customize_preview_js() {	wp_enqueue_script( 'twentytwelve-customizer', get_template_directory_uri() . '/js/theme-customizer.js', array( 'customize-preview' ), '20130301', true );}add_action( 'customize_preview_init', 'twentytwelve_customize_preview_js' );global $arr;/** * Filters Archive Month's Names * * by Joseph B. * * guide: 2014年09月(1) */add_filter('get_archives_link', 'translate_archive_month');function translate_archive_month($list) {  $patterns = array(    '/January/', '/February/', '/March/', '/April/', '/May/', '/June/',    '/July/', '/August/', '/September/', '/October/',  '/November/', '/December/'  );//	$com_month = '月';  $replacements = array(    '01', '02', '03', '04', '05', '06',     '07', '08', '09', '10', '11', '12'  );      $list = preg_replace($patterns, $replacements, $list);return $list; }/** * End of Filters Archive Month's Names * ------------------------------------ */  function include_post_types_in_search($query) {	if(is_search()) {		$post_types = get_post_types(array('public' => true, 'exclude_from_search' => false), 'objects');		$searchable_types = array();		if($post_types) {			foreach( $post_types as $type) {				$searchable_types[] = $type->name;			}		}		$query->set('post_type', $searchable_types);	}	return $query;}add_action('pre_get_posts', 'include_post_types_in_search');function delete_host_from_attachment_url( $url ) {    $regex = '/^http(s)?:\/\/[^\/\s]+(.*)$/';    if ( preg_match( $regex, $url, $m ) ) {        $url = $m[2];    }    return $url;}add_filter( 'wp_get_attachment_url', 'delete_host_from_attachment_url' );/** * Call layout-php.php * by Joseph B. */wp_enqueue_style('dynamic-css',                 admin_url('admin-ajax.php').'?action=dynamic_css',                 $deps = array(),                 $ver = false,                 $media = "");function dynaminc_css() {  require(get_template_directory().'/layout-php.php');  exit;}add_action('wp_ajax_dynamic_css', 'dynaminc_css');add_action('wp_ajax_nopriv_dynamic_css', 'dynaminc_css');/** * end of layout-php.php call * -------------------------- *//** * display only author's own posts in dashboard */function posts_for_current_author($query) {	global $user_level;	if($query->is_admin && $user_level < 5) {		global $user_ID;		$query->set('author',  $user_ID);		unset($user_ID);	}	unset($user_level);	return $query;}add_filter('pre_get_posts', 'posts_for_current_author');/** * end of displaying only author's own posts in dashboard * ------------------------------------------------------ *//** * Disable parent checkboxes in Post Editor. */add_action( 'admin_footer-post.php',     'wpse_98274_disable_top_categories_checkboxes' );add_action( 'admin_footer-post-new.php', 'wpse_98274_disable_top_categories_checkboxes' );function wpse_98274_disable_top_categories_checkboxes() {    global $post_type;    if ( 'post' != $post_type )        return;    ?>			<script type="text/javascript">				jQuery( "#category-all ul.children" ).each( function() {					jQuery(this).closest( "ul" ).parent().children().children( "input" ).attr( 'disabled', 'disabled' )				});			</script>    <?php}/** * End of disabling parent checkboxes in Post Editor. * -------------------------------------------------- *//** * Remove horrid feature that places checked categories on top. */add_filter( 'wp_terms_checklist_args', 'wpse_98274_checklist_args' );function wpse_98274_checklist_args( $args ) {    $args['checked_ontop'] = false;    return $args;}/** * End of removing horrid feature that places checked categories on top. * --------------------------------------------------------------------- */function do_googleMaps($atts, $content = null) { extract(shortcode_atts(array( "width" => '640', "height" => '480', "src" => '' ), $atts)); return '<iframe width="'.$width.'" height="'.$height.'" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="'.$src.'&amp;output=embed" ></iframe>';}add_shortcode("googlemap", "do_googleMaps");/* Add bootstrap support to the Wordpress theme*///function theme_add_bootstrap() {	//wp_enqueue_style( 'bootstrap-css', get_template_directory_uri() . '/css/bootstrap.min.css' );	//wp_enqueue_style( 'style-css', get_template_directory_uri() . '/style.css' );	//wp_enqueue_script( 'bootstrap-js', get_template_directory_uri() . '/js/bootstrap.min.js', array(), '3.0.0', true );//}//add_action( 'wp_enqueue_scripts', 'theme_add_bootstrap' );/* "a very generalized solution for array sorting" by Jon *//* http://stackoverflow.com/questions/96759/how-do-i-sort-a-multidimensional-array-in-php */function make_comparer() {    // Normalize criteria up front so that the comparer finds everything tidy    $criteria = func_get_args();    foreach ($criteria as $index => $criterion) {        $criteria[$index] = is_array($criterion)            ? array_pad($criterion, 3, null)            : array($criterion, SORT_ASC, null);    }    return function($first, $second) use (&$criteria) {        foreach ($criteria as $criterion) {            // How will we compare this round?            list($column, $sortOrder, $projection) = $criterion;            $sortOrder = $sortOrder === SORT_DESC ? -1 : 1;            // If a projection was defined project the values now            if ($projection) {                $lhs = call_user_func($projection, $first[$column]);                $rhs = call_user_func($projection, $second[$column]);            }            else {                $lhs = $first[$column];                $rhs = $second[$column];            }            // Do the actual comparison; do not return if equal            if ($lhs < $rhs) {                return 1 * $sortOrder; // original: return -1 * $sortOrder;            }            else if ($lhs > $rhs) {                return -1 * $sortOrder; // original: return 1 * $sortOrder;            }        }        return 0; // tiebreakers exhausted, so $first == $second    };}/* end of array sorting *//* -------------------- */if ( ! function_exists( 'my_pagination' ) ) :	function my_pagination() {		global $wp_query;		$big = 999999999; // need an unlikely integer				echo paginate_links( array(			'base' => str_replace( $big, '%#%', esc_url( get_pagenum_link( $big ) ) ),			'format' => '?paged=%#%',			'current' => max( 1, get_query_var('paged') ),			'total' => $wp_query->max_num_pages		) );	}endif;//**Custom Avatar**//if(!function_exists('custom_avatar')){	function custom_avatar($avatar_defaults){		//$new_default_icon = get_bloginfo('template_directory') . '/images/face.png';		$new_default_icon = network_site_url() . '../img/face.png';		$avatar_defaults[$new_default_icon] = 'Smiley Face';		return $avatar_defaults;	}	add_filter('avatar_defaults','custom_avatar');}/* Numbered Pagination */function numeric_pagination($prev_text, $next_text) {	if( is_singular() )		return;	global $wp_query;	/** Stop execution if there's only 1 page */	if( $wp_query->max_num_pages <= 1 )		return;	$paged = get_query_var( 'paged' ) ? absint( get_query_var( 'paged' ) ) : 1;	$max   = intval( $wp_query->max_num_pages );	/**	Add current page to the array */	if ( $paged >= 1 )		$links[] = $paged;	/**	Add the pages around the current page to the array */	if ( $paged >= 3 ) {		$links[] = $paged - 1;		$links[] = $paged - 2;	}	if ( ( $paged + 2 ) <= $max ) {		$links[] = $paged + 2;		$links[] = $paged + 1;	}	echo '<div class="navigation"><ul>' . "\n";	/**	Previous Post Link */	if ( get_previous_posts_link() )		$prev_link = get_previous_posts_link();		$prev_link2 = str_replace('Previous Page', $prev_text, $prev_link);		printf( '<li>%s</li>' . "\n", $prev_link2 );	/**	Link to first page, plus ellipses if necessary */	if ( ! in_array( 1, $links ) ) {		$class = 1 == $paged ? ' class="active"' : '';		printf( '<li%s><a href="%s">%s</a></li>' . "\n", $class, esc_url( get_pagenum_link( 1 ) ), '1' );		if ( ! in_array( 2, $links ) )			echo '<li>…</li>';	}	/**	Link to current page, plus 2 pages in either direction if necessary */	sort( $links );	foreach ( (array) $links as $link ) {		$class = $paged == $link ? ' class="active"' : '';		printf( '<li%s><a href="%s">%s</a></li>' . "\n", $class, esc_url( get_pagenum_link( $link ) ), $link );	}	/**	Link to last page, plus ellipses if necessary */	if ( ! in_array( $max, $links ) ) {		if ( ! in_array( $max - 1, $links ) )			echo '<li>…</li>' . "\n";		$class = $paged == $max ? ' class="active"' : '';		printf( '<li%s><a href="%s">%s</a></li>' . "\n", $class, esc_url( get_pagenum_link( $max ) ), $max );	}	/**	Next Post Link */	if ( get_next_posts_link() )		$next_link = get_next_posts_link();		$next_link2 = str_replace('Next Page', $next_text, $next_link);		printf( '<li>%s</li>' . "\n", $next_link2 );	echo '</ul></div>' . "\n";}/* End of Numbered Pagination *//* -------------------------- *//* Global Search Function *//*function template_chooser($template) {    	global $wp_query;   	$post_type = get_query_var('post_type');   	if( $wp_query->is_search && $post_type == 'global' ) {		return locate_template('Search Page - Global.php');  //  redirect to archive-search.php	}   	return $template;   }add_filter('template_include', 'template_chooser');*//* End of Global Search Function *//* ----------------------------- */// Remove category baseadd_filter('category_link', 'no_category_parents',1000,2);function no_category_parents($catlink, $category_id) {    $category = &get_category( $category_id );    if ( is_wp_error( $category ) )        return $category;    $category_nicename = $category->slug;    $catlink = trailingslashit(get_option( 'home' )) . user_trailingslashit( $category_nicename, 'category' );    return $catlink;}// Add our custom category rewrite rulesadd_filter('category_rewrite_rules', 'no_category_parents_rewrite_rules');function no_category_parents_rewrite_rules($category_rewrite) {    //print_r($category_rewrite); // For Debugging    $category_rewrite=array();    $categories=get_categories(array('hide_empty'=>false));    foreach($categories as $category) {        $category_nicename = $category->slug;        $category_rewrite['('.$category_nicename.')/(?:feed/)?(feed|rdf|rss|rss2|atom)/?$'] = 'index.php?category_name=$matches[1]&feed=$matches[2]';        $category_rewrite['('.$category_nicename.')/page/?([0-9]{1,})/?$'] = 'index.php?category_name=$matches[1]&paged=$matches[2]';        $category_rewrite['('.$category_nicename.')/?$'] = 'index.php?category_name=$matches[1]';    }    // Redirect support from Old Category Base    global $wp_rewrite;    $old_base = $wp_rewrite->get_category_permastruct();    $old_base = str_replace( '%category%', '(.+)', $old_base );    $old_base = trim($old_base, '/');    $category_rewrite[$old_base.'$'] = 'index.php?category_redirect=$matches[1]';    //print_r($category_rewrite); // For Debugging    return $category_rewrite;}// Add 'category_redirect' query variableadd_filter('query_vars', 'no_category_parents_query_vars');function no_category_parents_query_vars($public_query_vars) {    $public_query_vars[] = 'category_redirect';    return $public_query_vars;}// Redirect if 'category_redirect' is setadd_filter('request', 'no_category_parents_request');function no_category_parents_request($query_vars) {    //print_r($query_vars); // For Debugging    if(isset($query_vars['category_redirect'])) {        $catlink = trailingslashit(get_option( 'home' )) . user_trailingslashit( $query_vars['category_redirect'], 'category' );        status_header(301);        header("Location: $catlink");        exit();    }    return $query_vars;}/* ----------------------------- *//*Loop Pagination - A WordPress script for creating paginated links on archive-type pages.*/function loop_pagination( $args = array() ) {global $wp_rewrite, $wp_query;/* If there's not more than one page, return nothing. */if ( 1 >= $wp_query->max_num_pages )    return;/* Get the current page. */$current = ( get_query_var( 'paged' ) ? absint( get_query_var( 'paged' ) ) : 1 );/* Get the max number of pages. */$max_num_pages = intval( $wp_query->max_num_pages );/* Get the pagination base. */$pagination_base = $wp_rewrite->pagination_base;/* Set up some default arguments for the paginate_links() function. */$defaults = array(    'base'         => add_query_arg( 'paged', '%#%' ),    'format'       => '',    'total'        => $max_num_pages,    'current'      => $current,    'prev_next'    => true,    //'prev_text'  => __( '&laquo; Previous' ), // This is the WordPress default.    //'next_text'  => __( 'Next &raquo;' ), // This is the WordPress default.    'show_all'     => false,    'end_size'     => 1,    'mid_size'     => 1,    'add_fragment' => '',    'type'         => 'plain',    // Begin loop_pagination() arguments.    'before'       => '<nav class="pagination loop-pagination">',    'after'        => '</nav>',    'echo'         => true,);/* Add the $base argument to the array if the user is using permalinks. */if ( $wp_rewrite->using_permalinks() && !is_search() )    $defaults['base'] = user_trailingslashit( trailingslashit( get_pagenum_link() ) . "{$pagination_base}/%#%" );/* Allow developers to overwrite the arguments with a filter. */$args = apply_filters( 'loop_pagination_args', $args );/* Merge the arguments input with the defaults. */$args = wp_parse_args( $args, $defaults );/* Don't allow the user to set this to an array. */if ( 'array' == $args['type'] )    $args['type'] = 'plain';/* Get the paginated links. */$page_links = paginate_links( $args );/* Remove 'page/1' from the entire output since it's not needed. */$page_links = preg_replace(     array(         "#(href=['\"].*?){$pagination_base}/1(['\"])#",  // 'page/1'        "#(href=['\"].*?){$pagination_base}/1/(['\"])#", // 'page/1/'        "#(href=['\"].*?)\?paged=1(['\"])#",             // '?paged=1'        "#(href=['\"].*?)&\#038;paged=1(['\"])#"         // '&#038;paged=1'    ),     '$1$2',     $page_links );/* Wrap the paginated links with the $before and $after elements. */$page_links = $args['before'] . $page_links . $args['after'];/* Allow devs to completely overwrite the output. */$page_links = apply_filters( 'loop_pagination', $page_links );/* Return the paginated links for use in themes. */if ( $args['echo'] )    echo $page_links;else    return $page_links; }/* Test */add_filter( 'pre_get_posts' , 'custom_search' );function custom_search( $query ) {	if ( $query->is_admin )		return $query;	if ( $query->is_search ) {		$category_id = get_cat_ID('type_category_id');		$query -> set( 'category__not_in' , array( $category_id ) ); // Cat ID	}return $query;}/* Single.php pagination Test *//* Exclude pages form search */function SearchFilter($query) {if ($query->is_search) {$query->set('post_type', 'post');}return $query;}add_filter('pre_get_posts','SearchFilter');/* end of excluding pages from search *//* Comment Error Message *//* removing tags from content */function kotoriexcerpt($length) {	global $post;	$content = mb_substr(strip_tags($post->post_excerpt),0,$length); 	if(!$content){		$content =  $post->post_content;		$content =  strip_shortcodes($content);		$content =  strip_tags($content);		$content =  str_replace("&nbsp;","",$content); 		$content =  remove_shortcode('embed'); 		$content =  html_entity_decode($content,ENT_QUOTES,"UTF-8");		$content =  mb_substr($content,0,$length);	}	return $content;}/* end of removing tags from content *//* --------------------------------- *//* Remove default category box from post creation */function wpse60590_remove_metaboxes() {	remove_meta_box( 'categorydiv' , 'post' , 'normal' ); 	remove_meta_box( 'customcategorydiv' , 'post' , 'side' ); 	//remove_meta_box( 'tagsdiv-post_tag' , 'post' , 'normal' ); }add_action( 'admin_menu' , 'wpse60590_remove_metaboxes' );/* end of Removing default category box from post creation *//* ------------------------------------------------------- *//* comment validation */function comment_validation_init() {if(is_single() && comments_open() ) { ?><script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script><script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js"></script><script type="text/javascript">jQuery(document).ready(function($) {$('#commentform').validate({ rules: {  author: {    required: true,    minlength: 2  },   email: {    required: true,    email: true  },   comment: {    required: true,    minlength: 2  }}, messages: {  author: "この項目は必須項目です。",  email: "入力したメールアドレスの形式が不正、または未入力です。",  comment: "この項目は必須項目です。"}, errorElement: "div",errorPlacement: function(error, element) {  element.before(error);} });});</script><?php}}add_action('wp_footer', 'comment_validation_init');/* end of comment validation *//* ------------------------- *//* duplicate comment */add_filter( 'wp_die_handler', 'my_wp_die_handler_function', 9 ); //9 means you can unhook the default before it firesfunction my_wp_die_handler_function($function) {    return 'my_skip_dupes_function'; //use our "die" handler instead (where we won't die)}//check to make sure we're only filtering out die requests for the "Duplicate" error we care aboutfunction my_skip_dupes_function( $message, $title, $args ) {    if (strpos( $message, 'Duplicate comment detected' ) === 0 ) { //make sure we only prevent death on the $dupe check        remove_filter( 'wp_die_handler', '_default_wp_die_handler' ); //don't die    }    return; //nothing will happen}function twentytwelve_trim_excerpt($max_lenght = 50, $excerpt_more = ' [...]') {    $post = get_post();    $raw_excerpt = $text = $post->post_excerpt;    if ( '' == $text ) {        $text = $post->post_content;        $text = strip_shortcodes( $text );        $text = apply_filters('the_content', $text);        $text = str_replace(']]>', ']]&gt;', $text);        $text = strip_tags($text);        $excerpt_length = apply_filters('excerpt_length', $max_lenght);        $words = preg_split("/[\n\r\t ]+/", $text, $excerpt_length + 1, PREG_SPLIT_NO_EMPTY);        if ( count($words) > $excerpt_length ) {            array_pop($words);            $text = implode(' ', $words);            $text = $text . $excerpt_more;        } else {            $text = implode(' ', $words);        }    }    return apply_filters('wp_trim_excerpt', $text, $raw_excerpt);}